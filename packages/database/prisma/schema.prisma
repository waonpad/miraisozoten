generator client {
  provider      = "prisma-client-js"
  // デプロイ先のマシンに合わせてbinaryTargetsを変更する
  binaryTargets = ["native", "debian-openssl-1.1.x", "debian-openssl-3.0.x"]
}

datasource db {
  // mysqlの場合、長いデータには@db.Textをつける
  provider     = "mysql"
  url          = env("DATABASE_URL")
  // relationMode: デフォルトはforeignKeys
  // planetscaleの場合はprisma
  // モデルの@@indexもplanetscaleのために必要
  relationMode = "prisma"
}

model User {
  id            String   @id @default(uuid())
  name          String
  email         String?   @unique
  emailVerified Boolean  @default(false)
  image         String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  games         Game[]
}

model Prefecture {
  id         Int             @id @unique
  name       String
  short      String
  kana       String
  en         String
  neighborBy Prefecture[]    @relation("NeighborPrefecture")
  neighbors  Prefecture[]    @relation("NeighborPrefecture")
  region     Region          @relation(fields: [regionId], references: [id])
  regionId   Int
  games      Game[]
  asFactor   GameLog[]       @relation("FactorGameLog")
  asOpponent GameLog[]       @relation("OpponentGameLog")
  stats      PrefectureStats @relation(fields: [id], references: [id])

  @@index([regionId])
}

enum PrefectureStatsName {
  IMPORTANT_CULTURAL_PROPERTY_COUNT
  ACADEMICABILITY
  ANNUAL_PRECIPITATION
  AREA
  ARTMUSEUM_COUNT
  ATTRACTIVENESS_RANKING
  AVERAGE_TEMPERATURE
  DETACHED_HOUSE_RATE
  DEVIATION_VALUE
  ELEMENTARY_SCHOOL_COUNT
  GARBAGE_RECYCLING_RATE
  G_D_P
  HOMETOWN_TAX
  KOSHIEN_COUNT
  NATURAL_MONUMENT_COUNT
  POPULATION
  RICE_PRODUCTION_RATE
  SHRINE_COUNT
  SOCCER_POPULATION
  STATION_COUNT
  SUGAR_CONSUMPTION
}

model PrefectureStats {
  id         Int         @id @unique
  importantCulturalPropertyCount Int
  academicability Float
  annualPrecipitation Int
  area Int
  artmuseumCount Int
  attractivenessRanking Float
  averageTemperature Float
  detachedHouseRate Float
  deviationValue Float
  elementarySchoolCount Int
  garbageRecyclingRate Float
  gDP Int
  hometownTax Int
  koshienCount Int
  naturalMonumentCount Int
  population Int
  riceProductionRate Int
  shrineCount Int
  soccerPopulation Int
  stationCount Int
  sugarConsumption Int
  prefecture Prefecture?
}

model PrefectureStatsMetadata {
  id         Int         @id @default(autoincrement())
  name       PrefectureStatsName
  label      String
  unit       String
  sourceSiteName String
  sourceUrlTitle String
  sourceUrl  String
  retrievedAt DateTime
}

model Region {
  id          Int          @id
  name        String
  prefectures Prefecture[]
}

enum GameState {
  PLAYING
  FINISHED
  GIVEN_UP
}

enum GameDifficulty {
  EASY
  NORMAL
  HARD
  VERY_HARD
}

enum GameMode {
  NATIONWIDE
  REGIONAL
}

enum GameResult {
  WIN
  DRAW
  LOSE
}

enum HighLow {
  HIGH
  LOW
}

model Game {
  id           String         @id @default(uuid())
  state        GameState
  difficulty   GameDifficulty
  mode         GameMode
  prefecture   Prefecture     @relation(fields: [prefectureId], references: [id])
  prefectureId Int
  user         User           @relation(fields: [userId], references: [id])
  userId       String
  logs         GameLog[]
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt

  @@index([prefectureId])
  @@index([userId])
}

model GameLog {
  id                 Int                 @id @default(autoincrement())
  game               Game                @relation(fields: [gameId], references: [id])
  gameId             String
  highLow            HighLow
  factorPrefecture   Prefecture          @relation(fields: [factorPrefectureId], references: [id], name: "FactorGameLog")
  factorPrefectureId Int
  // factorNameはprefectureのstats
  factorName         PrefectureStatsName
  opponent           Prefecture          @relation(fields: [opponentId], references: [id], name: "OpponentGameLog")
  opponentId         Int
  result             GameResult
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt

  @@index([gameId])
  @@index([opponentId])
  @@index([factorPrefectureId])
}
